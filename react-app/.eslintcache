[{"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\index.js":"1","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\App.js":"2","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\reportWebVitals.js":"3","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\storeFinder.js":"4","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\menu\\menu.js":"5","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\locations\\storeJson.js":"6","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\locations\\store.js":"7","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\map\\Maps.js":"8","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\targetLocation\\targetLocation.js":"9","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\search\\search.js":"10","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\search\\triangulate.js":"11","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\map\\mapStyles.js":"12","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\targetLocation\\dayCard\\dayCard.js":"13"},{"size":764,"mtime":1619637834105,"results":"14","hashOfConfig":"15"},{"size":1059,"mtime":1619637834092,"results":"16","hashOfConfig":"15"},{"size":375,"mtime":1619637834105,"results":"17","hashOfConfig":"15"},{"size":5361,"mtime":1619637834102,"results":"18","hashOfConfig":"15"},{"size":545,"mtime":1619637834099,"results":"19","hashOfConfig":"15"},{"size":11248,"mtime":1620401431561,"results":"20","hashOfConfig":"15"},{"size":8253,"mtime":1620401452666,"results":"21","hashOfConfig":"15"},{"size":2655,"mtime":1619637834101,"results":"22","hashOfConfig":"15"},{"size":5889,"mtime":1619637834104,"results":"23","hashOfConfig":"15"},{"size":3293,"mtime":1619637834102,"results":"24","hashOfConfig":"15"},{"size":1596,"mtime":1619637834102,"results":"25","hashOfConfig":"15"},{"size":5079,"mtime":1619637834101,"results":"26","hashOfConfig":"15"},{"size":761,"mtime":1619637834103,"results":"27","hashOfConfig":"15"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},"55quv3",{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"30"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50","usedDeprecatedRules":"30"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"30"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"30"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\index.js",[],["58","59"],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\App.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\reportWebVitals.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\storeFinder.js",["60","61"],"import React, {useState, useEffect} from \"react\";\r\nimport './storeFinder.css'\r\nimport Store from './locations/store'\r\nimport { Container, Row, Col} from 'react-bootstrap';\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\nimport Search from './search/search'\r\nimport Maps from './map/Maps'\r\nimport  TargetLocation from './targetLocation/targetLocation'\r\nimport storeJson from './locations/storeJson'\r\nimport {useParams} from 'react-router-dom'\r\n\r\n\r\nfunction StoreFinder(props) {\r\n    // Removes a store menu if its there\r\n    const element = document.getElementById('menu-div')\r\n    if (element){\r\n        element.parentNode.removeChild(element);\r\n    }\r\n\r\n    // Id state \r\n    const [id, setId] = useState({\r\n        id:''\r\n    })\r\n\r\n    // Store distance state\r\n    const [storeDistance,setStoreDistance] = useState({\r\n        stores: [],\r\n        zoom:null,\r\n        center:null\r\n    })\r\n\r\n    // Default Map API information state\r\n    const [mapParams,setMapParams] = useState({\r\n        zoom:'5',\r\n        center:{lat: 39.8283, lng: -98.5795}\r\n    })\r\n\r\n    // Checks to see if a store should be pre-selected\r\n    const { store } = useParams()\r\n    useEffect(() => {\r\n        if(store){\r\n            const found = storeJson.find( ({ id }) => id === store)\r\n            if (found) {\r\n                setId({id:store})\r\n            }\r\n            return \r\n        }\r\n    },[store])\r\n\r\n\r\n        // Has a specific store been selected state\r\n    const [menuChosen,setMenuChosen] = useState({\r\n        menu:''\r\n    })\r\n\r\n    // This triggers whenever the id or storeDistance state changes\r\n    // This will then update the map zoom and centering \r\n    useEffect(() => {\r\n        if(id.id){\r\n            const filteredStores = storeJson.filter(store => store.id === id.id)\r\n            setMapParams({...mapParams,zoom:'14',center:{lat:filteredStores[0].lat,lng:filteredStores[0].lng}})\r\n        }\r\n        if(!id.id && !storeDistance.zoom){\r\n            setMapParams({...mapParams,zoom:'5',center:{lat: 39.8283, lng: -98.5795}})\r\n        }\r\n        if(storeDistance.zoom && storeDistance.center && !id.id){\r\n            setMapParams({...mapParams,zoom:storeDistance.zoom, center: storeDistance.center})\r\n        }\r\n        \r\n    },[id, storeDistance] )\r\n\r\n    // Whenvever a menu is chosen this will update the storeId state\r\n    useEffect(() => {\r\n        if(menuChosen.menu){\r\n            props.callBack({storeId:menuChosen.menu})\r\n        }\r\n    },[menuChosen])\r\n  \r\n    // If there is no id return the search component, the store component in locations, and a map component\r\n    if(!id.id){\r\n        return(\r\n            <Container fluid>\r\n                <Row>\r\n                    <Col xs={{span:12,order:2}} sm={{span:12,order:2}} lg={{span:4,order:1}} className='storeFinderInfo'> \r\n                        <div className='search'>\r\n                            <Search callBack = {setStoreDistance}></Search>\r\n                        </div>\r\n                        <div className='storeCards'>\r\n                            <Store organizedCards={storeDistance.stores} callBack = {setId}></Store>\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs={{span:12,order:1}} sm={{span:12,order:1}} lg={{span:8,order:2}} className='mapCol'>\r\n                        <div className='mobileSearch'>\r\n                            <Search callBack = {setStoreDistance}></Search>\r\n                        </div>\r\n                        <div className='stickyMap desktopMap'> \r\n                            <Maps center={mapParams.center} zoom={mapParams.zoom} windowSize={'100vh'}></Maps> \r\n                        </div>\r\n                         <div className='stickyMap mobileMap'> \r\n                            <Maps center={mapParams.center} zoom={mapParams.zoom -2} windowSize={'70vh'}></Maps> \r\n                        </div>\r\n                    </Col>\r\n                    \r\n                </Row>\r\n            </Container>\r\n        )\r\n    }\r\n    // If there is an Id return the Target Location component and a map component\r\n    // Also returns a search component on mobile only\r\n    if(id){\r\n        return(\r\n            <Container fluid>\r\n            <Row>\r\n                <Col xs={{span:12,order:2}} sm={{span:12,order:2}} lg={{span:4,order:1}} className='storeFinderInfo selectedStoreInfo'> \r\n                    <div className='storeCards'>\r\n                        <TargetLocation  id = {id.id} callBack = {setId} menuChosen={setMenuChosen}></TargetLocation>\r\n                    </div>\r\n                </Col>\r\n                <Col xs={{span:12,order:1}} sm={{span:12,order:1}} lg={{span:8,order:2}} className='stickyMap'>\r\n                    <div className='mobileSearch'>\r\n                            <Search callBack = {setStoreDistance} ></Search>\r\n                        </div>\r\n                    <div className='stickyMap desktopMap'> \r\n                        <Maps center={mapParams.center} zoom={mapParams.zoom} windowSize={'100vh'}></Maps> \r\n                    </div>\r\n                    <div className='stickyMap mobileMap'> \r\n                        <Maps center={mapParams.center} zoom={mapParams.zoom} windowSize={'70vh'}></Maps> \r\n                    </div>\r\n                </Col>\r\n                \r\n            </Row>\r\n        </Container>\r\n        )\r\n    }\r\n}\r\nexport default StoreFinder;","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\menu\\menu.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\locations\\storeJson.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\locations\\store.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\map\\Maps.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\targetLocation\\targetLocation.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\search\\search.js",["62"],"import React, {useState,useEffect}  from \"react\";\r\nimport PlacesAutocomplete, {\r\n  geocodeByAddress,\r\n  getLatLng\r\n} from \"react-places-autocomplete\";\r\nimport { FaSearch } from 'react-icons/fa';\r\nimport {BiCurrentLocation} from 'react-icons/bi'\r\nimport './search.css'\r\nimport triangulate from './triangulate.js'\r\n\r\n\r\n// This function creates the automated search bar that allows for users to find their address \r\nexport default function Search(props) {\r\n  // Creation of state variables\r\n  const [address, setAddress] = useState(\"\");\r\n  const [coordinates, setCoordinates] = useState({\r\n    lat: null,\r\n    lng: null\r\n  });\r\n\r\n  // sets lat and lng by calculating them from the google api info\r\n  const handleSelect = async value => {\r\n    const results = await geocodeByAddress(value);\r\n    const latLng = await getLatLng(results[0]);\r\n    setAddress(value);\r\n    setCoordinates(latLng);\r\n  };\r\n\r\n  // Asks the computer to access its geolocation information\r\n  const getGeoLocation = () => {\r\n    navigator.geolocation.getCurrentPosition(successfulLookup,unsuccessfulLookup)\r\n    window.scrollTo({\r\n      top: 0,\r\n      behavior: \"smooth\"\r\n    });\r\n}\r\n\r\n// gets coordinates\r\n  const successfulLookup = (position) => {\r\n      const {latitude, longitude} = position.coords\r\n      setCoordinates({lat:latitude, lng:longitude})\r\n  }\r\n  const unsuccessfulLookup = () => {\r\n      \r\n  }\r\n\r\n// runs when coordinates change and calls the triangulation function imported from triangulate.js\r\n  useEffect(() =>  {\r\n      if (coordinates.lat && coordinates.lng){\r\n        const closest = triangulate(coordinates.lat,coordinates.lng)\r\n        props.callBack({stores:closest,zoom:'12',\r\n        center:{lat: coordinates.lat, lng: coordinates.lng}})\r\n      }\r\n   \r\n  },[coordinates])\r\n\r\n  // JSX for search bar. Extensively uses the react-places-autocomplete library \r\n  return (\r\n    <div className='search-bar-container'>\r\n      {/* PlacesAutoComplete library  */}\r\n      <PlacesAutocomplete\r\n        value={address}\r\n        onChange={setAddress}\r\n        onSelect={handleSelect}\r\n      >\r\n        {({ getInputProps, suggestions, getSuggestionItemProps, loading }) => (\r\n          <div className='search-input-container'>\r\n\r\n            <div className='icon'><FaSearch/></div>\r\n            <button className='geoLocationButton' onClick={() => getGeoLocation()}><BiCurrentLocation/></button>\r\n            <input id='menuSearch' className='search-input' {...getInputProps({ placeholder: \"Enter your address\" })} />\r\n\r\n            <div>\r\n              {loading ? <div></div> : null}\r\n              {/* Displays background of search bar results and changes color when hovered */}\r\n              {suggestions.map(suggestion => {\r\n                const style = {\r\n                  backgroundColor: suggestion.active ? \"rgb(88, 89, 91)\" : \"rgb(60, 60, 60, 1)\",\r\n                  color:'white',\r\n                  'text-align':'left',\r\n                  'padding-left':\"36px\"\r\n                };\r\n\r\n                return (\r\n                  <div {...getSuggestionItemProps(suggestion, { style })}>\r\n                    {suggestion.description}\r\n                  </div>\r\n                );\r\n              })}\r\n            </div>\r\n          </div>\r\n        )}\r\n      </PlacesAutocomplete>\r\n    </div>\r\n  );\r\n}","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\search\\triangulate.js",[],"C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\map\\mapStyles.js",["63"],"// Styling information for the google map in JSON form as required\r\nexport default   [\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#f2f2f2\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"landscape\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"lightness\": \"85\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"poi\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"saturation\": -100\r\n            },\r\n            {\r\n                \"lightness\": 45\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"lightness\": \"60\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"lightness\": \"0\"\r\n            },\r\n            {\r\n                \"weight\": \"3.19\"\r\n            },\r\n            {\r\n                \"saturation\": \"0\"\r\n            },\r\n            {\r\n                \"gamma\": \"1.04\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"simplified\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway.controlled_access\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"lightness\": \"60\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.highway.controlled_access\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"lightness\": \"60\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.arterial\",\r\n        \"elementType\": \"labels.icon\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"lightness\": \"60\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"road.local\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"transit\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"visibility\": \"off\"\r\n            },\r\n            {\r\n                \"color\": \"#ff0000\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"all\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b48620\"\r\n            },\r\n            {\r\n                \"visibility\": \"on\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"geometry.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"lightness\": \"100\"\r\n            },\r\n            {\r\n                \"saturation\": \"80\"\r\n            },\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            },\r\n            {\r\n                \"gamma\": \"1.70\"\r\n            }\r\n        ]\r\n    },\r\n    {\r\n        \"featureType\": \"water\",\r\n        \"elementType\": \"labels.text.fill\",\r\n        \"stylers\": [\r\n            {\r\n                \"color\": \"#b4934a\"\r\n            }\r\n        ]\r\n    }\r\n]","C:\\Users\\andyg\\OneDrive\\Desktop\\coding\\work\\coffeejoint\\react_plugin\\react-app\\src\\components\\storeFinder\\targetLocation\\dayCard\\dayCard.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","severity":1,"message":"69","line":70,"column":7,"nodeType":"70","endLine":70,"endColumn":26,"suggestions":"71"},{"ruleId":"68","severity":1,"message":"72","line":77,"column":7,"nodeType":"70","endLine":77,"endColumn":19,"suggestions":"73"},{"ruleId":"68","severity":1,"message":"72","line":55,"column":5,"nodeType":"70","endLine":55,"endColumn":18,"suggestions":"74"},{"ruleId":"75","severity":1,"message":"76","line":2,"column":1,"nodeType":"77","endLine":237,"endColumn":2},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'mapParams'. Either include it or remove the dependency array. You can also do a functional update 'setMapParams(m => ...)' if you only need 'mapParams' in the 'setMapParams' call.","ArrayExpression",["80"],"React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["81"],["82"],"import/no-anonymous-default-export","Assign array to a variable before exporting as module default","ExportDefaultDeclaration","no-global-assign","no-unsafe-negation",{"desc":"83","fix":"84"},{"desc":"85","fix":"86"},{"desc":"87","fix":"88"},"Update the dependencies array to be: [id, mapParams, storeDistance]",{"range":"89","text":"90"},"Update the dependencies array to be: [menuChosen, props]",{"range":"91","text":"92"},"Update the dependencies array to be: [coordinates, props]",{"range":"93","text":"94"},[2229,2248],"[id, mapParams, storeDistance]",[2449,2461],"[menuChosen, props]",[1755,1768],"[coordinates, props]"]